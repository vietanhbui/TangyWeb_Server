<div class="bg-light border p-2 col-5" @onclick="e => LastSelectedProductChange(e, Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <div><input type="checkbox" @onchange="FavouriteUpdated" /> Add to Favourite</div>
    <div>Name - @Product.Name</div>
    <p>RF from parent - @FirstFragment @SecondFragment</p>
    <div>Show Properties: <input type="checkbox" @bind-value="Product.IsActive" checked="@Product.IsActive" /></div>
    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperies)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeleteButton IsActive="@Product.IsActive" />
</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }
    [Parameter]
    public EventCallback<bool> OnFavouriteUpdated { get; set; }
    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }
    [Parameter]
    public RenderFragment FirstFragment { get; set; }
    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    private async Task FavouriteUpdated(ChangeEventArgs e)
    {
        await OnFavouriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProductChange(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }
}
